{
	"info": {
		"_postman_id": "bdd812fc-d516-4ee8-8bad-ab2d6791ce56",
		"name": "recipes-social-network-api",
		"description": "Recipes, ingredients and share your own recipes with others API",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Auth",
			"item": [
				{
					"name": "/api/v0/auth/signin SignIn",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test(\"The post returns a new item with an id\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.id).to.not.eql(null);",
									"});",
									"",
									"pm.test(\"Response time is less than 200ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"user\",\n    \"password\": \"123456\"\n}"
						},
						"url": {
							"raw": "{{localhost}}/api/v0/auth/signin",
							"host": [
								"{{localhost}}"
							],
							"path": [
								"api",
								"v0",
								"auth",
								"signin"
							]
						},
						"description": "Post a new item to the recipe"
					},
					"response": []
				},
				{
					"name": "/api/v0/auth/signup SignUp",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test(\"The post returns a new item with an id\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.id).to.not.eql(null);",
									"});",
									"",
									"pm.test(\"Response time is less than 200ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"user\",\n    \"username\": \"userTest\",\n    \"email\": \"user@mail.com\",\n    \"password\": \"123456\"\n}"
						},
						"url": {
							"raw": "{{localhost}}/api/v0/auth/signup",
							"host": [
								"{{localhost}}"
							],
							"path": [
								"api",
								"v0",
								"auth",
								"signup"
							]
						},
						"description": "Post a new item to the recipe"
					},
					"response": []
				}
			]
		},
		{
			"name": "Users",
			"item": [
				{
					"name": "/api/v0/users Get All users",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"The count is equal to the number of items rx\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.count).to.eql(jsonData.rows.length);",
									"});",
									"",
									"pm.test(\"Response time is less than 600ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(600);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{localhost}}/api/v0/users",
							"host": [
								"{{localhost}}"
							],
							"path": [
								"api",
								"v0",
								"users"
							]
						},
						"description": "Get all the items in the recipe"
					},
					"response": []
				},
				{
					"name": "/api/v0/users/:id Get a user",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"A single item is returned\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.id).to.not.eql(null);",
									"});",
									"",
									"pm.test(\"Response time is less than 200ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{localhost}}/api/v0/users/61714c125137461d32c44efd",
							"host": [
								"{{localhost}}"
							],
							"path": [
								"api",
								"v0",
								"users",
								"61714c125137461d32c44efd"
							]
						},
						"description": "Request a specific recipe item detail"
					},
					"response": []
				},
				{
					"name": "Delete user",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{localhost}}/api/v0/users/6171836634f63b9e5702ae3a",
							"host": [
								"{{localhost}}"
							],
							"path": [
								"api",
								"v0",
								"users",
								"6171836634f63b9e5702ae3a"
							]
						}
					},
					"response": []
				},
				{
					"name": "/api/v0/users Modify a user",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"The count is equal to the number of items rx\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.count).to.eql(jsonData.rows.length);",
									"});",
									"",
									"pm.test(\"Response time is less than 600ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(600);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"other2\",\r\n    \"username\": \"otherTest2\",\r\n    \"email\": \"other2@mail.com\",\r\n    \"password\": \"123\"\r\n}"
						},
						"url": {
							"raw": "{{localhost}}/api/v0/users/6171833d34f63b9e5702ae35",
							"host": [
								"{{localhost}}"
							],
							"path": [
								"api",
								"v0",
								"users",
								"6171833d34f63b9e5702ae35"
							]
						},
						"description": "Get all the items in the recipe"
					},
					"response": []
				},
				{
					"name": "/api/v0/users Create a new user",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"The count is equal to the number of items rx\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.count).to.eql(jsonData.rows.length);",
									"});",
									"",
									"pm.test(\"Response time is less than 600ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(600);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"other\",\r\n    \"username\": \"otherTest\",\r\n    \"email\": \"other@mail.com\",\r\n    \"password\": \"456\"\r\n}"
						},
						"url": {
							"raw": "{{localhost}}/api/v0/users",
							"host": [
								"{{localhost}}"
							],
							"path": [
								"api",
								"v0",
								"users"
							]
						},
						"description": "Get all the items in the recipe"
					},
					"response": []
				}
			]
		},
		{
			"name": "Recipes",
			"item": [
				{
					"name": "/api/v0/recipes Get All recipes",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"The count is equal to the number of items rx\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.count).to.eql(jsonData.rows.length);",
									"});",
									"",
									"pm.test(\"Response time is less than 600ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(600);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{localhost}}/api/v0/recipes",
							"host": [
								"{{localhost}}"
							],
							"path": [
								"api",
								"v0",
								"recipes"
							]
						},
						"description": "Get all the items in the recipe"
					},
					"response": []
				},
				{
					"name": "/api/v0/recipes/:id Get a recipe",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"A single item is returned\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.id).to.not.eql(null);",
									"});",
									"",
									"pm.test(\"Response time is less than 200ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{localhost}}/api/v0/recipes/617170b3ead055276e270c47",
							"host": [
								"{{localhost}}"
							],
							"path": [
								"api",
								"v0",
								"recipes",
								"617170b3ead055276e270c47"
							]
						},
						"description": "Request a specific recipe item detail"
					},
					"response": []
				},
				{
					"name": "Delete recipe",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{localhost}}/api/v0/recipes/61716ffeead055276e270c40",
							"host": [
								"{{localhost}}"
							],
							"path": [
								"api",
								"v0",
								"recipes",
								"61716ffeead055276e270c40"
							]
						}
					},
					"response": []
				},
				{
					"name": "/api/v0/recipes Modify a recipe",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"The count is equal to the number of items rx\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.count).to.eql(jsonData.rows.length);",
									"});",
									"",
									"pm.test(\"Response time is less than 600ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(600);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"_id\": \"69abd4abf577d7cfd6d370f146611fea\",\r\n    \"recipeName\": \"Cheesy Vegetarian Enchilada Casserole\",\r\n    \"imagePath\": \"\",\r\n    \"readyIn\": \"25\",\r\n    \"averageRaiting\": \"0\",\r\n    \"skillLevel\": \"Easy\",\r\n    \"description\": \"Quick and easy cheesy enchilada casserole. Takes only 6 ingredients to make his popular one-pan amazing Mexican vegetarian dinner dish! Garnish with green onions and sour cream if desired.\",\r\n    \"method\": \"Step-1: Preheat the oven to 400 degrees F (200 degrees C). Line a sheet pan with parchment paper. \\nStep-2: Combine oregano, parsley, paprika, garlic powder, seasoned salt, and pepper in a small bowl. \\nStep-3: Place green beans, potato, bell pepper, broccoli, and garlic on the prepared sheet pan. Drizzle olive oil on top and sprinkle with 1/2 of the seasoning mix; toss to coat. Spread vegetables on one side of the pan. \\nStep-4: Place flour in a bowl. Place melted butter in a second bowl. Combine panko, 2/3 cup Parmesan cheese, and the remaining 1/2 of the seasoning mix in a third bowl. \\nStep-5: Remove any excess fat from chicken breasts and slice into 1 1/4 inch strips. Coat chicken strips in flour, then dredge in melted butter, and then dip in the Parmesan-panko mixture until heavily coated. Place on the empty half of the sheet pan and sprinkle with any remaining Parmesan-panko mixture, pressing onto the chicken. \\nStep-6: Bake in the preheated oven for 10 minutes. Remove from the oven, flip chicken strips, stir the veggies, and return to the oven. Bake until chicken juices run clear and veggies are crisp-tender, 10 to 15 minutes. An instant-read thermometer inserted into the center of the chicken should read at least 165 degrees F (74 degrees C). \\nStep-7: While the chicken is baking, whisk together mayonnaise, ketchup, garlic powder, and Worcestershire sauce. \\nStep-8: Remove chicken and veggies from the oven. Toss veggies with remaining Parmesan cheese. Serve with dipping sauce.\",\r\n    \"ingredients\": \"1 tablespoon dried oregano, 1 tablespoon dried parsley, 1 teaspoon paprika, ½ teaspoon garlic powder, ¼ teaspoon seasoned salt, or to taste, ¼ teaspoon ground black pepper, or to taste, ½ pound fresh green beans, trimmed, 1 small red potato, diced, 1 sweet bell pepper, chopped, 1 cup broccoli florets, chopped, 1 tablespoon minced garlic, 3 tablespoons olive oil, ⅓ cup all-purpose flour, 4 tablespoons butter, melted, 1 cup panko bread crumbs, 1 cup freshly grated Parmesan cheese, divided, 1 ½ pounds skinless, boneless chicken breasts, pounded flat\"\r\n}"
						},
						"url": {
							"raw": "{{localhost}}/api/v0/recipes/69abd4abf577d7cfd6d370f146611fea",
							"host": [
								"{{localhost}}"
							],
							"path": [
								"api",
								"v0",
								"recipes",
								"69abd4abf577d7cfd6d370f146611fea"
							]
						},
						"description": "Get all the items in the recipe"
					},
					"response": []
				},
				{
					"name": "/api/v0/recipes Create a new recipe",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"The count is equal to the number of items rx\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.count).to.eql(jsonData.rows.length);",
									"});",
									"",
									"pm.test(\"Response time is less than 600ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(600);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"recipeName\": \"Cheesy Vegetarian Enchilada Casserole\",\r\n    \"imagePath\": \"\",\r\n    \"readyIn\": \"25\",\r\n    \"averageRaiting\": \"0\",\r\n    \"skillLevel\": \"Easy\",\r\n    \"description\": \"Quick and easy cheesy enchilada casserole. Takes only 6 ingredients to make his popular one-pan amazing Mexican vegetarian dinner dish! Garnish with green onions and sour cream if desired.\",\r\n    \"method\": \"Step-1: Preheat the oven to 400 degrees F (200 degrees C). Line a sheet pan with parchment paper. \\nStep-2: Combine oregano, parsley, paprika, garlic powder, seasoned salt, and pepper in a small bowl. \\nStep-3: Place green beans, potato, bell pepper, broccoli, and garlic on the prepared sheet pan. Drizzle olive oil on top and sprinkle with 1/2 of the seasoning mix; toss to coat. Spread vegetables on one side of the pan. \\nStep-4: Place flour in a bowl. Place melted butter in a second bowl. Combine panko, 2/3 cup Parmesan cheese, and the remaining 1/2 of the seasoning mix in a third bowl. \\nStep-5: Remove any excess fat from chicken breasts and slice into 1 1/4 inch strips. Coat chicken strips in flour, then dredge in melted butter, and then dip in the Parmesan-panko mixture until heavily coated. Place on the empty half of the sheet pan and sprinkle with any remaining Parmesan-panko mixture, pressing onto the chicken. \\nStep-6: Bake in the preheated oven for 10 minutes. Remove from the oven, flip chicken strips, stir the veggies, and return to the oven. Bake until chicken juices run clear and veggies are crisp-tender, 10 to 15 minutes. An instant-read thermometer inserted into the center of the chicken should read at least 165 degrees F (74 degrees C). \\nStep-7: While the chicken is baking, whisk together mayonnaise, ketchup, garlic powder, and Worcestershire sauce. \\nStep-8: Remove chicken and veggies from the oven. Toss veggies with remaining Parmesan cheese. Serve with dipping sauce.\",\r\n    \"ingredients\": \"1 tablespoon dried oregano, 1 tablespoon dried parsley, 1 teaspoon paprika, ½ teaspoon garlic powder, ¼ teaspoon seasoned salt, or to taste, ¼ teaspoon ground black pepper, or to taste, ½ pound fresh green beans, trimmed, 1 small red potato, diced, 1 sweet bell pepper, chopped, 1 cup broccoli florets, chopped, 1 tablespoon minced garlic, 3 tablespoons olive oil, ⅓ cup all-purpose flour, 4 tablespoons butter, melted, 1 cup panko bread crumbs, 1 cup freshly grated Parmesan cheese, divided, 1 ½ pounds skinless, boneless chicken breasts, pounded flat\"\r\n}"
						},
						"url": {
							"raw": "{{localhost}}/api/v0/recipes",
							"host": [
								"{{localhost}}"
							],
							"path": [
								"api",
								"v0",
								"recipes"
							]
						},
						"description": "Get all the items in the recipe"
					},
					"response": []
				},
				{
					"name": "/api/v0/recipes/:id/comment/:id_comment Add Comment",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"The count is equal to the number of items rx\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.count).to.eql(jsonData.rows.length);",
									"});",
									"",
									"pm.test(\"Response time is less than 600ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(600);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"_idRecipe\": \"6171838ede23cf44c0480d88\",\r\n    \"comment\": \"\"\r\n}"
						},
						"url": {
							"raw": "{{localhost}}/api/v0/recipes/6171838ede23cf44c0480d88/comment/617183e4574274f9f21af89a",
							"host": [
								"{{localhost}}"
							],
							"path": [
								"api",
								"v0",
								"recipes",
								"6171838ede23cf44c0480d88",
								"comment",
								"617183e4574274f9f21af89a"
							]
						},
						"description": "Get all the items in the recipe"
					},
					"response": []
				}
			]
		},
		{
			"name": "Comments",
			"item": [
				{
					"name": "/api/v0/comments Get All comments",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"The count is equal to the number of items rx\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.count).to.eql(jsonData.rows.length);",
									"});",
									"",
									"pm.test(\"Response time is less than 600ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(600);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{localhost}}/api/v0/comments",
							"host": [
								"{{localhost}}"
							],
							"path": [
								"api",
								"v0",
								"comments"
							]
						},
						"description": "Get all the items in the recipe"
					},
					"response": []
				},
				{
					"name": "/api/v0/comments/:id Get a comment",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"A single item is returned\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.id).to.not.eql(null);",
									"});",
									"",
									"pm.test(\"Response time is less than 200ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{localhost}}/api/v0/comments/6171796d0041c2ce7b76296f",
							"host": [
								"{{localhost}}"
							],
							"path": [
								"api",
								"v0",
								"comments",
								"6171796d0041c2ce7b76296f"
							]
						},
						"description": "Request a specific recipe item detail"
					},
					"response": []
				},
				{
					"name": "Delete comment",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{localhost}}/api/v0/comments/61717a140041c2ce7b762973",
							"host": [
								"{{localhost}}"
							],
							"path": [
								"api",
								"v0",
								"comments",
								"61717a140041c2ce7b762973"
							]
						}
					},
					"response": []
				},
				{
					"name": "/api/v0/comments Modify a comment",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"The count is equal to the number of items rx\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.count).to.eql(jsonData.rows.length);",
									"});",
									"",
									"pm.test(\"Response time is less than 600ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(600);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"title\": \"New recipe test 3\",\r\n    \"method\": \"Step-1: Preheat the oven to 400 degrees F (200 degrees C).\",\r\n    \"ingredients\": \"1 tablespoon dried oregano\"\r\n}"
						},
						"url": {
							"raw": "{{localhost}}/api/v0/comments/61717169ead055276e270c4e",
							"host": [
								"{{localhost}}"
							],
							"path": [
								"api",
								"v0",
								"comments",
								"61717169ead055276e270c4e"
							]
						},
						"description": "Get all the items in the recipe"
					},
					"response": []
				},
				{
					"name": "/api/v0/comments Create a new comment",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"The count is equal to the number of items rx\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.count).to.eql(jsonData.rows.length);",
									"});",
									"",
									"pm.test(\"Response time is less than 600ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(600);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"textComment\": \"Fantastic recipe!\",\r\n    \"aliasUser\": \"zenway\",\r\n    \"rate\": \"4\"\r\n}"
						},
						"url": {
							"raw": "{{localhost}}/api/v0/comments",
							"host": [
								"{{localhost}}"
							],
							"path": [
								"api",
								"v0",
								"comments"
							]
						},
						"description": "Get all the items in the recipe"
					},
					"response": []
				}
			]
		},
		{
			"name": "Hello-test",
			"item": [
				{
					"name": "/ Get Hello World",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"The count is equal to the number of items rx\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.count).to.eql(jsonData.rows.length);",
									"});",
									"",
									"pm.test(\"Response time is less than 600ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(600);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{localhost}}/",
							"host": [
								"{{localhost}}"
							],
							"path": [
								""
							]
						},
						"description": "Get all the items in the recipe"
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "host",
			"value": "https://a1f49313f372f480bb379c59ee922f01-640772322.us-east-2.elb.amazonaws.com"
		},
		{
			"key": "token",
			"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6InVzZXJUZXN0Iiwic3ViIjoiNjE4MGQxMjFmYjMzNDZkMTljZTEzNmU5IiwiaWF0IjoxNjM1ODMyMDk3LCJleHAiOjE2MzU4NzUyOTcsImF1ZCI6Imh0dHBzOi8vcmVjaXBlcy1zb2NpYWwtbmV0d29yay5jb20ifQ.TGXCebvNXfsOtrmper7MHNe3w_oHr0Komb9Ie7tS8w0"
		},
		{
			"key": "localhost",
			"value": "http://localhost:3000"
		}
	]
}